service: logitrack-notifications

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'prod'}
  region: ${opt:region, 'us-east-1'}
  memorySize: 512
  timeout: 30
  
  environment:
    FIREBASE_PROJECT_ID: ${env:FIREBASE_PROJECT_ID}
    FIREBASE_PRIVATE_KEY_ID: ${env:FIREBASE_PRIVATE_KEY_ID}
    FIREBASE_PRIVATE_KEY: ${env:FIREBASE_PRIVATE_KEY}
    FIREBASE_CLIENT_EMAIL: ${env:FIREBASE_CLIENT_EMAIL}
    FIREBASE_CLIENT_ID: ${env:FIREBASE_CLIENT_ID}
    NODE_ENV: production
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: 
            - 'arn:aws:logs:${aws:region}:${aws:accountId}:log-group:/aws/lambda/*:*:*'

functions:
  notificationHandler:
    handler: notification-handler.handler
    name: logitrack-notifications-${self:provider.stage}
    description: 'LogiTrack Push Notifications via Firebase FCM - Production Ready'
    events:
      # Endpoint principal para trigger de notificações
      - http:
          path: /notifications/trigger
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Gateway-Source
              - X-Request-ID
            allowCredentials: false
      - http:
          path: /notifications/trigger
          method: options
          cors: true
          
      # Endpoint para registro de dispositivos
      - http:
          path: /notifications/register-device
          method: post
          cors: true
      - http:
          path: /notifications/register-device
          method: options
          cors: true
          
      # Health check
      - http:
          path: /notifications/health
          method: get
          cors: true
          
      # Configurações de dispositivos
      - http:
          path: /notifications/settings/{deviceId}
          method: put
          cors: true
          
      # Histórico de notificações
      - http:
          path: /notifications/history
          method: get
          cors: true
          
      # Estatísticas
      - http:
          path: /notifications/stats
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  # Configurações do dotenv para carregar variáveis do aws.env
  dotenv:
    path: aws.env
    
  serverless-offline:
    httpPort: 3003 